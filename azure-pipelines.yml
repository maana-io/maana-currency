# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '3932b06f-e302-40f8-a806-00f1df2c0059'
  imageRepository: 'maanaiomaanacurrency'
  containerRegistry: 'services.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'services93717b03-auth'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)        
        tags: |
          $(tag)
    
    # - task: Docker@2
    #   inputs:
    #     containerRegistry: 'services'
    #     repository: 'maana-currency'
    #     command: 'build'
    #     Dockerfile: '**/Dockerfile'
    #     arguments: '--build-arg PORT=8050 --build-arg SERVICE_ID=maana-currency-yay'
    # - task: Docker@2
    #   inputs:
    #     containerRegistry: 'services'
    #     repository: 'maana-currency'
    #     command: 'push'
    # - upload: manifests
    #   artifact: manifests


- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'maanaiomaanacurrency-1438.default'    
    strategy:
      runOnce:
        deploy:
          steps:          
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)          
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy              
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
